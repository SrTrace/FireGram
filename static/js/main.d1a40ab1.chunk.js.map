{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/imageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snapshot","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","map","key","onClick","layout","whileHover","opacity","img","src","alt","transintion","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1a40ab1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDIlqnZ1xXRp20XPS705QGIxq2X3u40VUU\",\r\n    authDomain: \"firegram-fb18a.firebaseapp.com\",\r\n    projectId: \"firegram-fb18a\",\r\n    storageBucket: \"firegram-fb18a.appspot.com\",\r\n    messagingSenderId: \"484498955607\",\r\n    appId: \"1:484498955607:web:9114f780d2dd5ba045f212\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport {projectStorage, projectFirestore, timestamp};","import {useState, useEffect} from 'react';\r\nimport {projectStorage, projectFirestore, timestamp} from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() =>{\r\n        //references\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state-changed', (snapshot) => {\r\n            let percentage = (snapshot.bytesTransferred/snapshot.totalBytes)*100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({url, createdAt});\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return {progress, url, error}\r\n\r\n}\r\n\r\nexport default useStorage;","import React, {useEffect} from 'react';\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport {motion} from \"framer-motion\";\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const {url, progress} = useStorage(file);\r\n\r\n    useEffect(()=> {\r\n        if (url) {\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile]);\r\n    return (\r\n        <motion.div\r\n            className=\"progress-bar\"\r\n            initial={{width: 0}}\r\n            animate={{width: progress + '%'}}\r\n        >{''}</motion.div>\r\n    )\r\n};\r\n\r\nexport default ProgressBar;","import React, {useState} from 'react';\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst UploadForm = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [error,setError] = useState(null);\r\n\r\n    const types = ['image/png', 'image/jpeg', \"image/jpg\"]\r\n\r\n    const changeHandler = (e) => {\r\n        let selected = e.target.files[0];\r\n\r\n        if (selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setError('');\r\n        } else {\r\n            setFile(null);\r\n            setError('Please select an image file (png or jpeg)');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={changeHandler}\r\n                />\r\n                <span>+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n                {error && <div className=\"error\">{error}</div>}\r\n                {file && <div>{file.name}</div>}\r\n                {file && <ProgressBar file = {file} setFile={setFile}/>}\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UploadForm;","import {useState, useEffect} from 'react';\r\nimport {projectFirestore} from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect(()=> {\r\n       const unsub = projectFirestore.collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snapshot) => {\r\n                let documents = [];\r\n                snapshot.forEach(doc => {\r\n                    documents.push({...doc.data(), id: doc.id})\r\n                });\r\n                setDocs(documents);\r\n            });\r\n\r\n       return () => unsub();\r\n\r\n    }, [collection]);\r\n\r\n    return {docs};\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({setSelectedImg}) => {\r\n    const {docs} = useFirestore('images');\r\n    console.log(docs);\r\n\r\n    return (\r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc => (\r\n                <motion.div\r\n                    className=\"img-wrap\"\r\n                    key={doc.id}\r\n                    onClick={() => setSelectedImg(doc.url)}\r\n                    layout\r\n                    whileHover={{opacity: 1}}\r\n                >\r\n                    <motion.img\r\n                        src={doc.url}\r\n                        alt=\"uploaded pic\"\r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        transintion={{delay: 1}}\r\n                    />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport {motion} from \"framer-motion\";\r\n\r\n\r\nconst Modal = ({selectedImg, setSelectedImg}) => {\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('backdrop')) {\r\n            setSelectedImg(null);\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            className=\"backdrop\"\r\n            onClick={handleClick}\r\n            initial={{opacity: 0}}\r\n            animate={{opacity: 1}}\r\n        >\r\n            <motion.img\r\n                src={selectedImg}\r\n                alt=\"enlarged pic\"\r\n                initial={{y:\"-100vh\"}}\r\n                animate={{y: 0}}\r\n            />\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {useState} from 'react';\nimport Title from './comps/Title';\nimport UploadForm from \"./comps/UploadForm\";\nimport ImageGrid from \"./comps/imageGrid\";\nimport Modal from \"./comps/Modal\";\n\n\nfunction App() {\n    const [selectedImg, setSelectedImg] = useState(null);\n\n    return (\n        <div className=\"App\">\n            <Title/>\n            <UploadForm/>\n            <ImageGrid setSelectedImg={setSelectedImg}/>\n            {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/>}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}